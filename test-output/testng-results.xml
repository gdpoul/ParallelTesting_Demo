<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="9" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-12T17:03:38 IST" name="GridSuite" finished-at="2023-01-12T17:05:54 IST" duration-ms="135797">
    <groups>
    </groups>
    <test started-at="2023-01-12T17:03:38 IST" name="Test3" finished-at="2023-01-12T17:03:57 IST" duration-ms="18994">
      <class name="seleniumgridPractice.GridPractice">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:seleniumgridPractice.GridPractice@54d9d12d]" started-at="2023-01-12T17:03:38 IST" name="setUp" finished-at="2023-01-12T17:03:45 IST" duration-ms="6362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGoogleOnEdge()[pri:0, instance:seleniumgridPractice.GridPractice@54d9d12d]" started-at="2023-01-12T17:03:45 IST" name="testGoogleOnEdge" finished-at="2023-01-12T17:03:56 IST" duration-ms="11342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoogleOnEdge -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:seleniumgridPractice.GridPractice@54d9d12d]" started-at="2023-01-12T17:03:56 IST" name="tearDown" finished-at="2023-01-12T17:03:57 IST" duration-ms="1233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- seleniumgridPractice.GridPractice -->
    </test> <!-- Test3 -->
    <test started-at="2023-01-12T17:03:38 IST" name="Test2" finished-at="2023-01-12T17:04:03 IST" duration-ms="24866">
      <class name="seleniumgridPractice.GridPractice">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:seleniumgridPractice.GridPractice@22555ebf]" started-at="2023-01-12T17:03:38 IST" name="setUp" finished-at="2023-01-12T17:03:57 IST" duration-ms="18701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFacebookOnFirefox()[pri:0, instance:seleniumgridPractice.GridPractice@22555ebf]" started-at="2023-01-12T17:03:57 IST" name="testFacebookOnFirefox" finished-at="2023-01-12T17:04:01 IST" duration-ms="3578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFacebookOnFirefox -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:seleniumgridPractice.GridPractice@22555ebf]" started-at="2023-01-12T17:04:01 IST" name="tearDown" finished-at="2023-01-12T17:04:03 IST" duration-ms="2548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- seleniumgridPractice.GridPractice -->
    </test> <!-- Test2 -->
    <test started-at="2023-01-12T17:03:38 IST" name="Test1" finished-at="2023-01-12T17:05:54 IST" duration-ms="135797">
      <class name="seleniumgridPractice.GridPractice">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:seleniumgridPractice.GridPractice@313ac989]" started-at="2023-01-12T17:03:38 IST" name="setUp" finished-at="2023-01-12T17:03:44 IST" duration-ms="5915" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testOrangeHRMOnChrome()[pri:0, instance:seleniumgridPractice.GridPractice@313ac989]" started-at="2023-01-12T17:03:44 IST" name="testOrangeHRMOnChrome" finished-at="2023-01-12T17:05:54 IST" duration-ms="129496" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=108.0.5359.126)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [84671a1de8915ca152b5d0d0f121a666, findElement {using=name, value=username}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.126, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\ganes\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58617}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: Windows 10, proxy: Proxy(), se:bidiEnabled: false, se:cdp: ws://172.17.32.1:4444/sessi..., se:cdpVersion: 108.0.5359.126, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 84671a1de8915ca152b5d0d0f121a666]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=108.0.5359.126)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [84671a1de8915ca152b5d0d0f121a666, findElement {using=name, value=username}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.126, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\ganes\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58617}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: Windows 10, proxy: Proxy(), se:bidiEnabled: false, se:cdp: ws://172.17.32.1:4444/sessi..., se:cdpVersion: 108.0.5359.126, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 84671a1de8915ca152b5d0d0f121a666
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at seleniumgridPractice.GridPractice.testOrangeHRMOnChrome(GridPractice.java:61)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrangeHRMOnChrome -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:seleniumgridPractice.GridPractice@313ac989]" started-at="2023-01-12T17:05:54 IST" name="tearDown" finished-at="2023-01-12T17:05:54 IST" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- seleniumgridPractice.GridPractice -->
    </test> <!-- Test1 -->
  </suite> <!-- GridSuite -->
</testng-results>
